api/business/session.class.php:44:      $this->requested_site = $site_class_name::get_unique_record(
api/business/session.class.php:49:      $this->requested_role = $role_class_name::get_unique_record( 'name', $role_name );
api/database/base_form.class.php:92:    if( !is_null( $this->id ) )
api/database/base_form.class.php:95:      $modifier->where( 'id', '=', $this->id );
api/database/base_form.class.php:96:      $this->scan_value = static::db()->get_one( sprintf(
api/database/base_form.class.php:102:    return $this->scan_value;
api/database/base_form.class.php:117:      $this->scan_value = $value;
api/database/base_form.class.php:118:      $this->scan_changed = true;
api/database/base_form.class.php:132:    if( $this->read_only )
api/database/base_form.class.php:139:    if( $this->scan_changed && !is_null( $this->id ) )
api/database/base_form.class.php:144:      $modifier->where( 'id', '=', $this->id );
api/database/base_form.class.php:148:        $database_class_name::format_string( $this->scan_value ),
api/database/proxy_form.class.php:39:    $this->validated_proxy_form_entry_id = $db_proxy_form_entry->id;
api/database/proxy_form.class.php:236:    $this->complete = true;
api/database/proxy_form.class.php:238:      $this->proxy_alternate_id = $db_proxy_alternate->id;
api/database/proxy_form.class.php:241:      $this->informant_alternate_id = $db_proxy_alternate->id;
api/database/proxy_form.class.php:243:      $this->informant_alternate_id = $db_informant_alternate->id;
api/database/proxy_form.class.php:245:    $this->save();
api/database/participant.class.php:29:    $contact_form_list = $this->get_contact_form_list();
api/database/consent.class.php:29:    $consent_form_list = $this->get_consent_form_list();
api/database/consent_form.class.php:35:    $this->validated_consent_form_entry_id = $db_consent_form_entry->id;
api/database/consent_form.class.php:91:    $this->complete = true;
api/database/consent_form.class.php:92:    if( !is_null( $db_consent ) ) $this->consent_id = $db_consent->id;
api/database/consent_form.class.php:93:    $this->save();
api/database/import_entry.class.php:32:    if( 0 != preg_match( '/apt|apartment|#/i', $this->apartment ) )
api/database/import_entry.class.php:33:      $this->apartment_error = true;
api/database/import_entry.class.php:36:    if( is_null( $this->street ) && is_null( $this->address_other ) )
api/database/import_entry.class.php:37:      $this->address_error = true;
api/database/import_entry.class.php:40:    $db_region = $region_class_name::get_unique_record( 'abbreviation', $this->province );
api/database/import_entry.class.php:41:    if( is_null( $db_region ) || 'Canada' != $db_region->country ) $this->province_error = true;
api/database/import_entry.class.php:45:      $db_postcode = $postcode_class_name::get_match( $this->postcode );
api/database/import_entry.class.php:47:        $this->postcode_error = true;
api/database/import_entry.class.php:50:    if( !is_null( $this->home_phone ) && !util::validate_phone_number( $this->home_phone ) )
api/database/import_entry.class.php:51:      $this->home_phone_error = true;
api/database/import_entry.class.php:53:    if( !is_null( $this->mobile_phone ) && !util::validate_phone_number( $this->mobile_phone ) )
api/database/import_entry.class.php:54:      $this->mobile_phone_error = true;
api/database/import_entry.class.php:58:    $participant_mod->where( 'first_name', '=', $this->first_name );
api/database/import_entry.class.php:59:    $participant_mod->where( 'last_name', '=', $this->last_name );
api/database/import_entry.class.php:64:        if( !is_null( $this->home_phone ) && $this->home_phone == $db_phone->number ||
api/database/import_entry.class.php:65:            !is_null( $this->mobile_phone ) && $this->mobile_phone == $db_phone->number )
api/database/import_entry.class.php:66:          $this->duplicate_participant_error = true;
api/database/import_entry.class.php:73:    if( 0 == preg_match( '/^male|female$/', $this->gender ) ) $this->gender_error = true;
api/database/import_entry.class.php:74:    if( !util::validate_date( $this->date_of_birth ) ) $this->date_of_birth_error = true;
api/database/import_entry.class.php:75:    if( 0 == preg_match( '/^en|fr$/', $this->language ) ) $this->language_error = true;
api/database/import_entry.class.php:76:    if( !in_array( $this->cohort, $cohort_names ) ) $this->cohort_error = true;
api/database/import_entry.class.php:77:    if( !util::validate_date( $this->date ) ) $this->date_error = true;
api/database/import_entry.class.php:80:    if( !$this->apartment_error &&
api/database/import_entry.class.php:81:        !$this->address_error &&
api/database/import_entry.class.php:82:        !$this->province_error &&
api/database/import_entry.class.php:83:        !$this->postcode_error &&
api/database/import_entry.class.php:84:        !$this->duplicate_participant_error )
api/database/import_entry.class.php:87:      $address = $this->street;
api/database/import_entry.class.php:88:      if( !is_null( $this->apartment ) ) $address = $this->apartment.' '.$address;
api/database/import_entry.class.php:89:      $postcode = 6 == strlen( $this->postcode )
api/database/import_entry.class.php:91:                           substr( $this->postcode, 0, 3 ),
api/database/import_entry.class.php:92:                           substr( $this->postcode, 3, 3 ) )
api/database/import_entry.class.php:93:                : $this->postcode;
api/database/import_entry.class.php:97:      $address_mod->where( 'address2', '=', $this->address_other );
api/database/import_entry.class.php:98:      $address_mod->where( 'city', '=', $this->city );
api/database/import_entry.class.php:104:        if( $db_participant && $db_participant->get_cohort()->name == $this->cohort )
api/database/import_entry.class.php:106:          $this->duplicate_address_error = true;
api/database/import_entry.class.php:112:    return !$this->apartment_error &&
api/database/import_entry.class.php:113:           !$this->address_error &&
api/database/import_entry.class.php:114:           !$this->province_error &&
api/database/import_entry.class.php:115:           !$this->postcode_error &&
api/database/import_entry.class.php:116:           !$this->home_phone_error &&
api/database/import_entry.class.php:117:           !$this->mobile_phone_error &&
api/database/import_entry.class.php:118:           !$this->duplicate_participant_error &&
api/database/import_entry.class.php:119:           !$this->duplicate_address_error &&
api/database/import_entry.class.php:120:           !$this->gender_error &&
api/database/import_entry.class.php:121:           !$this->date_of_birth_error &&
api/database/import_entry.class.php:122:           !$this->language_error &&
api/database/import_entry.class.php:123:           !$this->cohort_error &&
api/database/import_entry.class.php:124:           !$this->date_error;
api/database/import_entry.class.php:136:    if( is_null( $this->id ) )
api/database/import_entry.class.php:159:    $interval = util::get_interval( $this->date_of_birth );
api/database/import_entry.class.php:175:    $db_cohort = $cohort_class_name::get_unique_record( 'name', $this->cohort );
api/database/import_entry.class.php:177:    $db_participant->first_name = $this->first_name;
api/database/import_entry.class.php:178:    $db_participant->last_name = $this->last_name;
api/database/import_entry.class.php:179:    $db_participant->gender = $this->gender;
api/database/import_entry.class.php:180:    $db_participant->date_of_birth = $this->date_of_birth;
api/database/import_entry.class.php:183:    $db_participant->language = $this->language;
api/database/import_entry.class.php:184:    $db_participant->email = $this->email;
api/database/import_entry.class.php:201:    $db_participant->add_event( $db_event, $this->date );
api/database/import_entry.class.php:204:    $address = $this->street;
api/database/import_entry.class.php:205:    if( !is_null( $this->apartment ) ) $address = $this->apartment.' '.$address;
api/database/import_entry.class.php:207:    $db_region = $region_class_name::get_unique_record( 'abbreviation', $this->province );
api/database/import_entry.class.php:213:    $db_address->address2 = $this->address_other;
api/database/import_entry.class.php:214:    $db_address->city = $this->city;
api/database/import_entry.class.php:216:    $postcode = 6 == strlen( $this->postcode )
api/database/import_entry.class.php:218:                         substr( $this->postcode, 0, 3 ),
api/database/import_entry.class.php:219:                         substr( $this->postcode, 3, 3 ) )
api/database/import_entry.class.php:220:              : $this->postcode;
api/database/import_entry.class.php:229:    if( !is_null( $this->home_phone ) )
api/database/import_entry.class.php:237:      $db_home_phone->number = $this->home_phone;
api/database/import_entry.class.php:241:    if( !is_null( $this->mobile_phone ) )
api/database/import_entry.class.php:248:      $db_mobile_phone->number = $this->mobile_phone;
api/database/import_entry.class.php:253:    if( 'mobile' == $this->phone_preference &&
api/database/import_entry.class.php:265:    $all_days = ( 0 == $this->monday &&
api/database/import_entry.class.php:266:                  0 == $this->tuesday &&
api/database/import_entry.class.php:267:                  0 == $this->wednesday &&
api/database/import_entry.class.php:268:                  0 == $this->thursday &&
api/database/import_entry.class.php:269:                  0 == $this->friday &&
api/database/import_entry.class.php:270:                  0 == $this->saturday ) ||
api/database/import_entry.class.php:271:                ( 1 == $this->monday &&
api/database/import_entry.class.php:272:                  1 == $this->tuesday &&
api/database/import_entry.class.php:273:                  1 == $this->wednesday &&
api/database/import_entry.class.php:274:                  1 == $this->thursday &&
api/database/import_entry.class.php:275:                  1 == $this->friday &&
api/database/import_entry.class.php:276:                  1 == $this->saturday );
api/database/import_entry.class.php:277:    $all_times = ( 0 == $this->time_9_10 &&
api/database/import_entry.class.php:278:                   0 == $this->time_10_11 &&
api/database/import_entry.class.php:279:                   0 == $this->time_11_12 &&
api/database/import_entry.class.php:280:                   0 == $this->time_12_13 &&
api/database/import_entry.class.php:281:                   0 == $this->time_13_14 &&
api/database/import_entry.class.php:282:                   0 == $this->time_14_15 &&
api/database/import_entry.class.php:283:                   0 == $this->time_15_16 &&
api/database/import_entry.class.php:284:                   0 == $this->time_16_17 &&
api/database/import_entry.class.php:285:                   0 == $this->time_17_18 &&
api/database/import_entry.class.php:286:                   0 == $this->time_18_19 &&
api/database/import_entry.class.php:287:                   0 == $this->time_19_20 &&
api/database/import_entry.class.php:288:                   0 == $this->time_20_21 ) ||
api/database/import_entry.class.php:289:                 ( 1 == $this->time_9_10 &&
api/database/import_entry.class.php:290:                   1 == $this->time_10_11 &&
api/database/import_entry.class.php:291:                   1 == $this->time_11_12 &&
api/database/import_entry.class.php:292:                   1 == $this->time_12_13 &&
api/database/import_entry.class.php:293:                   1 == $this->time_13_14 &&
api/database/import_entry.class.php:294:                   1 == $this->time_14_15 &&
api/database/import_entry.class.php:295:                   1 == $this->time_15_16 &&
api/database/import_entry.class.php:296:                   1 == $this->time_16_17 &&
api/database/import_entry.class.php:297:                   1 == $this->time_17_18 &&
api/database/import_entry.class.php:298:                   1 == $this->time_18_19 &&
api/database/import_entry.class.php:299:                   1 == $this->time_19_20 &&
api/database/import_entry.class.php:300:                   1 == $this->time_20_21 );
api/database/import_entry.class.php:306:      if( $this->time_9_10 ) $times[] = 9;
api/database/import_entry.class.php:307:      if( $this->time_10_11 ) $times[] = 10;
api/database/import_entry.class.php:308:      if( $this->time_11_12 ) $times[] = 11;
api/database/import_entry.class.php:309:      if( $this->time_12_13 ) $times[] = 12;
api/database/import_entry.class.php:310:      if( $this->time_13_14 ) $times[] = 13;
api/database/import_entry.class.php:311:      if( $this->time_14_15 ) $times[] = 14;
api/database/import_entry.class.php:312:      if( $this->time_15_16 ) $times[] = 15;
api/database/import_entry.class.php:313:      if( $this->time_16_17 ) $times[] = 16;
api/database/import_entry.class.php:314:      if( $this->time_17_18 ) $times[] = 17;
api/database/import_entry.class.php:315:      if( $this->time_18_19 ) $times[] = 18;
api/database/import_entry.class.php:316:      if( $this->time_19_20 ) $times[] = 19;
api/database/import_entry.class.php:317:      if( $this->time_20_21 ) $times[] = 20;
api/database/import_entry.class.php:371:      $db_availability->monday = $this->monday;
api/database/import_entry.class.php:372:      $db_availability->tuesday = $this->tuesday;
api/database/import_entry.class.php:373:      $db_availability->wednesday = $this->wednesday;
api/database/import_entry.class.php:374:      $db_availability->thursday = $this->thursday;
api/database/import_entry.class.php:375:      $db_availability->friday = $this->friday;
api/database/import_entry.class.php:376:      $db_availability->saturday = $this->saturday;
api/database/import_entry.class.php:396:        $db_availability->monday = $this->monday;
api/database/import_entry.class.php:397:        $db_availability->tuesday = $this->tuesday;
api/database/import_entry.class.php:398:        $db_availability->wednesday = $this->wednesday;
api/database/import_entry.class.php:399:        $db_availability->thursday = $this->thursday;
api/database/import_entry.class.php:400:        $db_availability->friday = $this->friday;
api/database/import_entry.class.php:401:        $db_availability->saturday = $this->saturday;
api/database/import_entry.class.php:414:    $this->participant_id = $db_participant->id;
api/database/import_entry.class.php:415:    $this->save();
api/database/import.class.php:30:    if( !is_null( $this->id ) )
api/database/import.class.php:33:      $modifier->where( 'id', '=', $this->id );
api/database/import.class.php:34:      $this->data_value = static::db()->get_one( sprintf(
api/database/import.class.php:40:    return $this->data_value;
api/database/import.class.php:55:      $this->data_value = $value;
api/database/import.class.php:56:      $this->data_changed = true;
api/database/import.class.php:70:    if( $this->read_only )
api/database/import.class.php:77:    if( $this->data_changed && !is_null( $this->id ) )
api/database/import.class.php:82:      $modifier->where( 'id', '=', $this->id );
api/database/import.class.php:86:        $database_class_name::format_string( $this->data_value ),
api/database/alternate.class.php:34:    if( $this->proxy )
api/database/alternate.class.php:35:      $modifier->where( 'proxy_alternate_id', '=', $this->id );
api/database/alternate.class.php:36:    else if( $this->informant )
api/database/alternate.class.php:37:      $modifier->where( 'informant_alternate_id', '=', $this->id );
api/database/contact_form.class.php:73:    $this->validated_contact_form_entry_id = $db_contact_form_entry->id;
api/database/contact_form.class.php:387:    $this->complete = true;
api/database/contact_form.class.php:388:    $this->participant_id = $db_participant->id;
api/database/contact_form.class.php:389:    $this->save();
api/database/service.class.php:42:                    $database_class_name::format_string( $this->id ),
api/database/service.class.php:56:      $database_class_name::format_string( $this->id ),
api/ui/widget/service_participant_release.class.php:29:    $this->service_name = lib::create( 'business\session' )->get_site()->get_service()->name;
api/ui/widget/service_participant_release.class.php:30:    $this->set_heading( 'Release Participants to '.$this->service_name );
api/ui/widget/service_participant_release.class.php:43:    $this->set_variable( 'service_name', $this->service_name );
api/ui/widget/contact_form_view.class.php:42:    $this->add_item( 'first_name', 'First Name' );
api/ui/widget/contact_form_view.class.php:43:    $this->add_item( 'last_name', 'Last Name' );
api/ui/widget/contact_form_view.class.php:44:    $this->add_item( 'apartment_number', 'Apartment #' );
api/ui/widget/contact_form_view.class.php:45:    $this->add_item( 'street_number', 'Street #' );
api/ui/widget/contact_form_view.class.php:46:    $this->add_item( 'street_name', 'Street Name' );
api/ui/widget/contact_form_view.class.php:47:    $this->add_item( 'box', 'Post Office Box #' );
api/ui/widget/contact_form_view.class.php:48:    $this->add_item( 'rural_route', 'Rural Route #' );
api/ui/widget/contact_form_view.class.php:49:    $this->add_item( 'address_other', 'Other Address' );
api/ui/widget/contact_form_view.class.php:50:    $this->add_item( 'city', 'City' );
api/ui/widget/contact_form_view.class.php:51:    $this->add_item( 'region_id', 'Province' );
api/ui/widget/contact_form_view.class.php:52:    $this->add_item( 'postcode', 'Postal Code' );
api/ui/widget/contact_form_view.class.php:53:    $this->add_item( 'address_note', 'Address Note' );
api/ui/widget/contact_form_view.class.php:54:    $this->add_item( 'home_phone', 'Home Phone' );
api/ui/widget/contact_form_view.class.php:55:    $this->add_item( 'home_phone_note', 'Home Phone Note' );
api/ui/widget/contact_form_view.class.php:56:    $this->add_item( 'mobile_phone', 'Mobile Phone' );
api/ui/widget/contact_form_view.class.php:57:    $this->add_item( 'mobile_phone_note', 'Mobile Phone Note' );
api/ui/widget/contact_form_view.class.php:58:    $this->add_item( 'phone_preference', 'Phone Preference' );
api/ui/widget/contact_form_view.class.php:59:    $this->add_item( 'email', 'Email Address' );
api/ui/widget/contact_form_view.class.php:60:    $this->add_item( 'gender', 'Sex' );
api/ui/widget/contact_form_view.class.php:61:    $this->add_item( 'age_bracket', 'Age Bracket' );
api/ui/widget/contact_form_view.class.php:62:    $this->add_item( 'monday', 'Monday' );
api/ui/widget/contact_form_view.class.php:63:    $this->add_item( 'tuesday', 'Tuesday' );
api/ui/widget/contact_form_view.class.php:64:    $this->add_item( 'wednesday', 'Wednesday' );
api/ui/widget/contact_form_view.class.php:65:    $this->add_item( 'thursday', 'Thursday' );
api/ui/widget/contact_form_view.class.php:66:    $this->add_item( 'friday', 'Friday' );
api/ui/widget/contact_form_view.class.php:67:    $this->add_item( 'saturday', 'Saturday' );
api/ui/widget/contact_form_view.class.php:68:    $this->add_item( 'time_9_10', '9am to 10am' );
api/ui/widget/contact_form_view.class.php:69:    $this->add_item( 'time_10_11', '10am to 11am' );
api/ui/widget/contact_form_view.class.php:70:    $this->add_item( 'time_11_12', '11am to 12pm' );
api/ui/widget/contact_form_view.class.php:71:    $this->add_item( 'time_12_13', '12pm to 1pm' );
api/ui/widget/contact_form_view.class.php:72:    $this->add_item( 'time_13_14', '1pm to 2pm' );
api/ui/widget/contact_form_view.class.php:73:    $this->add_item( 'time_14_15', '2pm to 3pm' );
api/ui/widget/contact_form_view.class.php:74:    $this->add_item( 'time_15_16', '3pm to 4pm' );
api/ui/widget/contact_form_view.class.php:75:    $this->add_item( 'time_16_17', '4pm to 5pm' );
api/ui/widget/contact_form_view.class.php:76:    $this->add_item( 'time_17_18', '5pm to 6pm' );
api/ui/widget/contact_form_view.class.php:77:    $this->add_item( 'time_18_19', '6pm to 7pm' );
api/ui/widget/contact_form_view.class.php:78:    $this->add_item( 'time_19_20', '7pm to 8pm' );
api/ui/widget/contact_form_view.class.php:79:    $this->add_item( 'time_20_21', '8pm to 9pm' );
api/ui/widget/contact_form_view.class.php:80:    $this->add_item( 'language', 'Language' );
api/ui/widget/contact_form_view.class.php:81:    $this->add_item( 'signed', 'Signed' );
api/ui/widget/contact_form_view.class.php:82:    $this->add_item( 'date', 'Date Signed' );
api/ui/widget/contact_form_view.class.php:83:    $this->add_item( 'cohort_id', 'Cohort' );
api/ui/widget/contact_form_view.class.php:84:    $this->add_item( 'note', 'Note' );
api/ui/widget/import_add.class.php:52:    $md5 = $this->get_argument( 'md5', false );
api/ui/widget/import_add.class.php:53:    $this->set_variable( 'md5', $md5 );
api/ui/widget/import_add.class.php:63:      $this->set_variable( 'id', $db_import->id );
api/ui/widget/import_add.class.php:64:      $this->set_variable( 'filename', $db_import->name );
api/ui/widget/import_add.class.php:65:      $this->set_variable( 'rows', $db_import->get_import_entry_count() );
api/ui/widget/import_add.class.php:82:      $this->set_variable(
api/ui/widget/import_add.class.php:92:      $this->set_variable( 'apartment_error_list', $apartment_error_list );
api/ui/widget/import_add.class.php:101:      $this->set_variable( 'address_error_list', $address_error_list );
api/ui/widget/import_add.class.php:110:      $this->set_variable( 'province_error_list', $province_error_list );
api/ui/widget/import_add.class.php:119:      $this->set_variable( 'postcode_error_list', $postcode_error_list );
api/ui/widget/import_add.class.php:128:      $this->set_variable( 'home_phone_error_list', $home_phone_error_list );
api/ui/widget/import_add.class.php:137:      $this->set_variable( 'mobile_phone_error_list', $mobile_phone_error_list );
api/ui/widget/import_add.class.php:146:      $this->set_variable( 'duplicate_participant_error_list', $duplicate_participant_error_list );
api/ui/widget/import_add.class.php:155:      $this->set_variable( 'duplicate_address_error_list', $duplicate_address_error_list );
api/ui/widget/import_add.class.php:164:      $this->set_variable( 'gender_error_list', $gender_error_list );
api/ui/widget/import_add.class.php:173:      $this->set_variable( 'date_of_birth_error_list', $date_of_birth_error_list );
api/ui/widget/import_add.class.php:182:      $this->set_variable( 'language_error_list', $language_error_list );
api/ui/widget/import_add.class.php:191:      $this->set_variable( 'cohort_error_list', $cohort_error_list );
api/ui/widget/import_add.class.php:200:      $this->set_variable( 'date_error_list', $date_error_list );
api/ui/widget/mailout_report.class.php:41:    $this->add_parameter( 'mailed_to', 'boolean', 'Mailed To' );
api/ui/widget/mailout_report.class.php:42:    $this->add_restriction( 'cohort' );
api/ui/widget/mailout_report.class.php:43:    $this->add_restriction( 'source' );
api/ui/widget/mailout_report.class.php:44:    $this->add_parameter( 'mark_mailout', 'boolean', 'Mark mailouts as complete' );
api/ui/widget/mailout_report.class.php:46:    $this->set_variable( 'description',
api/ui/widget/mailout_report.class.php:65:    $this->set_parameter( 'mailed_to', false, true );
api/ui/widget/mailout_report.class.php:66:    $this->set_parameter( 'mark_mailout', false, true );
api/ui/widget/form_chart.class.php:112:    $this->set_variable( 'title', 'Data Entry System: Incomplete Form Status' );
api/ui/widget/form_chart.class.php:113:    $this->set_variable( 'data', $data );
api/ui/widget/proxy_form_entry_view.class.php:42:    $this->add_item( 'uid', 'string', 'CLSA ID' );
api/ui/widget/proxy_form_entry_view.class.php:43:    $this->add_item( 'proxy', 'boolean', 'Use Proxy' );
api/ui/widget/proxy_form_entry_view.class.php:44:    $this->add_item( 'already_identified', 'boolean', 'Already Identified' );
api/ui/widget/proxy_form_entry_view.class.php:45:    $this->add_item( 'proxy_first_name', 'string', 'Proxy\'s First Name' );
api/ui/widget/proxy_form_entry_view.class.php:46:    $this->add_item( 'proxy_last_name', 'string', 'Proxy\'s Last Name' );
api/ui/widget/proxy_form_entry_view.class.php:47:    $this->add_item( 'proxy_apartment_number', 'string', 'Proxy\'s Apartment #' );
api/ui/widget/proxy_form_entry_view.class.php:48:    $this->add_item( 'proxy_street_number', 'string', 'Proxy\'s Street #' );
api/ui/widget/proxy_form_entry_view.class.php:49:    $this->add_item( 'proxy_street_name', 'string', 'Proxy\'s Street Name' );
api/ui/widget/proxy_form_entry_view.class.php:50:    $this->add_item( 'proxy_box', 'string', 'Proxy\'s Post Office Box #' );
api/ui/widget/proxy_form_entry_view.class.php:51:    $this->add_item( 'proxy_rural_route', 'string', 'Proxy\'s Rural Route #' );
api/ui/widget/proxy_form_entry_view.class.php:52:    $this->add_item( 'proxy_address_other', 'string', 'Proxy\'s Other Address' );
api/ui/widget/proxy_form_entry_view.class.php:53:    $this->add_item( 'proxy_city', 'string', 'Proxy\'s City' );
api/ui/widget/proxy_form_entry_view.class.php:54:    $this->add_item( 'proxy_region_id', 'enum', 'Proxy\'s Province' );
api/ui/widget/proxy_form_entry_view.class.php:55:    $this->add_item( 'proxy_postcode', 'string', 'Proxy\'s Postal Code' );
api/ui/widget/proxy_form_entry_view.class.php:56:    $this->add_item( 'proxy_address_note', 'text', 'Proxy Address Note' );
api/ui/widget/proxy_form_entry_view.class.php:57:    $this->add_item( 'proxy_phone', 'string', 'Proxy\'s Phone Number' );
api/ui/widget/proxy_form_entry_view.class.php:58:    $this->add_item( 'proxy_phone_note', 'text', 'Proxy Phone Note' );
api/ui/widget/proxy_form_entry_view.class.php:59:    $this->add_item( 'proxy_note', 'text', 'Proxy Note' );
api/ui/widget/proxy_form_entry_view.class.php:60:    $this->add_item( 'informant', 'boolean', 'Use Informant' );
api/ui/widget/proxy_form_entry_view.class.php:61:    $this->add_item( 'same_as_proxy', 'boolean', 'Same As Proxy' );
api/ui/widget/proxy_form_entry_view.class.php:62:    $this->add_item( 'informant_first_name', 'string', 'Informant\'s First Name' );
api/ui/widget/proxy_form_entry_view.class.php:63:    $this->add_item( 'informant_last_name', 'string', 'Informant\'s Last Name' );
api/ui/widget/proxy_form_entry_view.class.php:64:    $this->add_item( 'informant_apartment_number', 'string', 'Informant\'s Apartment #' );
api/ui/widget/proxy_form_entry_view.class.php:65:    $this->add_item( 'informant_street_number', 'string', 'Informant\'s Street #' );
api/ui/widget/proxy_form_entry_view.class.php:66:    $this->add_item( 'informant_street_name', 'string', 'Informant\'s Street Name' );
api/ui/widget/proxy_form_entry_view.class.php:67:    $this->add_item( 'informant_box', 'string', 'Informant\'s Post Office Box #' );
api/ui/widget/proxy_form_entry_view.class.php:68:    $this->add_item( 'informant_rural_route', 'string', 'Informant\'s Rural Route #' );
api/ui/widget/proxy_form_entry_view.class.php:69:    $this->add_item( 'informant_address_other', 'string', 'Informant\'s Other Address' );
api/ui/widget/proxy_form_entry_view.class.php:70:    $this->add_item( 'informant_city', 'string', 'Informant\'s City' );
api/ui/widget/proxy_form_entry_view.class.php:71:    $this->add_item( 'informant_region_id', 'enum', 'Informant\'s Province' );
api/ui/widget/proxy_form_entry_view.class.php:72:    $this->add_item( 'informant_postcode', 'string', 'Informant\'s Postal Code' );
api/ui/widget/proxy_form_entry_view.class.php:73:    $this->add_item( 'informant_address_note', 'text', 'Informant Address Note' );
api/ui/widget/proxy_form_entry_view.class.php:74:    $this->add_item( 'informant_phone', 'string', 'Informant\'s Phone Number' );
api/ui/widget/proxy_form_entry_view.class.php:75:    $this->add_item( 'informant_phone_note', 'text', 'Informant Phone Note' );
api/ui/widget/proxy_form_entry_view.class.php:76:    $this->add_item( 'informant_note', 'text', 'Informant Note' );
api/ui/widget/proxy_form_entry_view.class.php:77:    $this->add_item( 'informant_continue', 'boolean', 'Informant Continue' );
api/ui/widget/proxy_form_entry_view.class.php:78:    $this->add_item( 'health_card', 'boolean', 'Health Card Continue' );
api/ui/widget/proxy_form_entry_view.class.php:79:    $this->add_item( 'signed', 'boolean', 'Signed' );
api/ui/widget/proxy_form_entry_view.class.php:80:    $this->add_item( 'date', 'date', 'Date Signed' );
api/ui/widget/proxy_form_entry_view.class.php:104:    $record = $this->get_record();
api/ui/widget/proxy_form_entry_view.class.php:105:    $this->set_item( 'uid', $record->uid, false );
api/ui/widget/proxy_form_entry_view.class.php:106:    $this->set_item( 'proxy', $record->proxy, false );
api/ui/widget/proxy_form_entry_view.class.php:107:    $this->set_item( 'already_identified', $record->already_identified, false );
api/ui/widget/proxy_form_entry_view.class.php:108:    $this->set_item( 'proxy_first_name', $record->proxy_first_name, false );
api/ui/widget/proxy_form_entry_view.class.php:109:    $this->set_item( 'proxy_last_name', $record->proxy_last_name, false );
api/ui/widget/proxy_form_entry_view.class.php:110:    $this->set_item( 'proxy_apartment_number', $record->proxy_apartment_number, false );
api/ui/widget/proxy_form_entry_view.class.php:111:    $this->set_item( 'proxy_street_number', $record->proxy_street_number, false );
api/ui/widget/proxy_form_entry_view.class.php:112:    $this->set_item( 'proxy_street_name', $record->proxy_street_name, false );
api/ui/widget/proxy_form_entry_view.class.php:113:    $this->set_item( 'proxy_box', $record->proxy_box, false );
api/ui/widget/proxy_form_entry_view.class.php:114:    $this->set_item( 'proxy_rural_route', $record->proxy_rural_route, false );
api/ui/widget/proxy_form_entry_view.class.php:115:    $this->set_item( 'proxy_address_other', $record->proxy_address_other, false );
api/ui/widget/proxy_form_entry_view.class.php:116:    $this->set_item( 'proxy_city', $record->proxy_city, false );
api/ui/widget/proxy_form_entry_view.class.php:117:    $this->set_item( 'proxy_region_id', $record->proxy_region_id, false, $region_list );
api/ui/widget/proxy_form_entry_view.class.php:118:    $this->set_item( 'proxy_postcode', $record->proxy_postcode, false );
api/ui/widget/proxy_form_entry_view.class.php:119:    $this->set_item( 'proxy_address_note', $record->proxy_address_note, false );
api/ui/widget/proxy_form_entry_view.class.php:120:    $this->set_item( 'proxy_phone', $record->proxy_phone, false );
api/ui/widget/proxy_form_entry_view.class.php:121:    $this->set_item( 'proxy_phone_note', $record->proxy_phone_note, false );
api/ui/widget/proxy_form_entry_view.class.php:122:    $this->set_item( 'proxy_note', $record->proxy_note, false );
api/ui/widget/proxy_form_entry_view.class.php:123:    $this->set_item( 'informant', $record->informant, false );
api/ui/widget/proxy_form_entry_view.class.php:124:    $this->set_item( 'same_as_proxy', $record->same_as_proxy, false );
api/ui/widget/proxy_form_entry_view.class.php:125:    $this->set_item( 'informant_first_name', $record->informant_first_name, false );
api/ui/widget/proxy_form_entry_view.class.php:126:    $this->set_item( 'informant_last_name', $record->informant_last_name, false );
api/ui/widget/proxy_form_entry_view.class.php:127:    $this->set_item( 'informant_apartment_number', $record->informant_apartment_number, false );
api/ui/widget/proxy_form_entry_view.class.php:128:    $this->set_item( 'informant_street_number', $record->informant_street_number, false );
api/ui/widget/proxy_form_entry_view.class.php:129:    $this->set_item( 'informant_street_name', $record->informant_street_name, false );
api/ui/widget/proxy_form_entry_view.class.php:130:    $this->set_item( 'informant_box', $record->informant_box, false );
api/ui/widget/proxy_form_entry_view.class.php:131:    $this->set_item( 'informant_rural_route', $record->informant_rural_route, false );
api/ui/widget/proxy_form_entry_view.class.php:132:    $this->set_item( 'informant_address_other', $record->informant_address_other, false );
api/ui/widget/proxy_form_entry_view.class.php:133:    $this->set_item( 'informant_city', $record->informant_city, false );
api/ui/widget/proxy_form_entry_view.class.php:134:    $this->set_item( 'informant_region_id', $record->informant_region_id, false, $region_list );
api/ui/widget/proxy_form_entry_view.class.php:135:    $this->set_item( 'informant_postcode', $record->informant_postcode, false );
api/ui/widget/proxy_form_entry_view.class.php:136:    $this->set_item( 'informant_address_note', $record->informant_address_note, false );
api/ui/widget/proxy_form_entry_view.class.php:137:    $this->set_item( 'informant_phone', $record->informant_phone, false );
api/ui/widget/proxy_form_entry_view.class.php:138:    $this->set_item( 'informant_phone_note', $record->informant_phone_note, false );
api/ui/widget/proxy_form_entry_view.class.php:139:    $this->set_item( 'informant_note', $record->informant_note, false );
api/ui/widget/proxy_form_entry_view.class.php:140:    $this->set_item( 'informant_continue', $record->informant_continue, false );
api/ui/widget/proxy_form_entry_view.class.php:141:    $this->set_item( 'health_card', $record->health_card, false );
api/ui/widget/proxy_form_entry_view.class.php:142:    $this->set_item( 'signed', $this->get_record()->signed, true );
api/ui/widget/proxy_form_entry_view.class.php:143:    $this->set_item( 'date', $record->date, false );
api/ui/widget/contact_form_entry_view.class.php:42:    $this->add_item( 'first_name', 'string', 'First Name' );
api/ui/widget/contact_form_entry_view.class.php:43:    $this->add_item( 'last_name', 'string', 'Last Name' );
api/ui/widget/contact_form_entry_view.class.php:44:    $this->add_item( 'apartment_number', 'string', 'Apartment #' );
api/ui/widget/contact_form_entry_view.class.php:45:    $this->add_item( 'street_number', 'string', 'Street #' );
api/ui/widget/contact_form_entry_view.class.php:46:    $this->add_item( 'street_name', 'string', 'Street Name' );
api/ui/widget/contact_form_entry_view.class.php:47:    $this->add_item( 'box', 'string', 'Post Office Box #' );
api/ui/widget/contact_form_entry_view.class.php:48:    $this->add_item( 'rural_route', 'string', 'Rural Route #' );
api/ui/widget/contact_form_entry_view.class.php:49:    $this->add_item( 'address_other', 'string', 'Other Address' );
api/ui/widget/contact_form_entry_view.class.php:50:    $this->add_item( 'city', 'string', 'City' );
api/ui/widget/contact_form_entry_view.class.php:51:    $this->add_item( 'region_id', 'enum', 'Province' );
api/ui/widget/contact_form_entry_view.class.php:52:    $this->add_item( 'postcode', 'string', 'Postal Code' );
api/ui/widget/contact_form_entry_view.class.php:53:    $this->add_item( 'address_note', 'text', 'Address Note' );
api/ui/widget/contact_form_entry_view.class.php:54:    $this->add_item( 'home_phone', 'string', 'Home Phone' );
api/ui/widget/contact_form_entry_view.class.php:55:    $this->add_item( 'home_phone_note', 'text', 'Home Phone Note' );
api/ui/widget/contact_form_entry_view.class.php:56:    $this->add_item( 'mobile_phone', 'string', 'Mobile Phone' );
api/ui/widget/contact_form_entry_view.class.php:57:    $this->add_item( 'mobile_phone_note', 'text', 'Home Mobile Note' );
api/ui/widget/contact_form_entry_view.class.php:58:    $this->add_item( 'phone_preference', 'enum', 'Phone Preference' );
api/ui/widget/contact_form_entry_view.class.php:59:    $this->add_item( 'email', 'string', 'Email Address' );
api/ui/widget/contact_form_entry_view.class.php:60:    $this->add_item( 'gender', 'enum', 'Sex' );
api/ui/widget/contact_form_entry_view.class.php:61:    $this->add_item( 'age_bracket', 'enum', 'Age Bracket' );
api/ui/widget/contact_form_entry_view.class.php:62:    $this->add_item( 'monday', 'boolean', 'Monday' );
api/ui/widget/contact_form_entry_view.class.php:63:    $this->add_item( 'tuesday', 'boolean', 'Tuesday' );
api/ui/widget/contact_form_entry_view.class.php:64:    $this->add_item( 'wednesday', 'boolean', 'Wednesday' );
api/ui/widget/contact_form_entry_view.class.php:65:    $this->add_item( 'thursday', 'boolean', 'Thursday' );
api/ui/widget/contact_form_entry_view.class.php:66:    $this->add_item( 'friday', 'boolean', 'Friday' );
api/ui/widget/contact_form_entry_view.class.php:67:    $this->add_item( 'saturday', 'boolean', 'Saturday' );
api/ui/widget/contact_form_entry_view.class.php:68:    $this->add_item( 'time_9_10', 'boolean', '9am to 10am' );
api/ui/widget/contact_form_entry_view.class.php:69:    $this->add_item( 'time_10_11', 'boolean', '10am to 11am' );
api/ui/widget/contact_form_entry_view.class.php:70:    $this->add_item( 'time_11_12', 'boolean', '11am to 12pm' );
api/ui/widget/contact_form_entry_view.class.php:71:    $this->add_item( 'time_12_13', 'boolean', '12pm to 1pm' );
api/ui/widget/contact_form_entry_view.class.php:72:    $this->add_item( 'time_13_14', 'boolean', '1pm to 2pm' );
api/ui/widget/contact_form_entry_view.class.php:73:    $this->add_item( 'time_14_15', 'boolean', '2pm to 3pm' );
api/ui/widget/contact_form_entry_view.class.php:74:    $this->add_item( 'time_15_16', 'boolean', '3pm to 4pm' );
api/ui/widget/contact_form_entry_view.class.php:75:    $this->add_item( 'time_16_17', 'boolean', '4pm to 5pm' );
api/ui/widget/contact_form_entry_view.class.php:76:    $this->add_item( 'time_17_18', 'boolean', '5pm to 6pm' );
api/ui/widget/contact_form_entry_view.class.php:77:    $this->add_item( 'time_18_19', 'boolean', '6pm to 7pm' );
api/ui/widget/contact_form_entry_view.class.php:78:    $this->add_item( 'time_19_20', 'boolean', '7pm to 8pm' );
api/ui/widget/contact_form_entry_view.class.php:79:    $this->add_item( 'time_20_21', 'boolean', '8pm to 9pm' );
api/ui/widget/contact_form_entry_view.class.php:80:    $this->add_item( 'language', 'enum', 'Language' );
api/ui/widget/contact_form_entry_view.class.php:81:    $this->add_item( 'signed', 'boolean', 'Signed' );
api/ui/widget/contact_form_entry_view.class.php:82:    $this->add_item( 'date', 'date', 'Date Signed' );
api/ui/widget/contact_form_entry_view.class.php:83:    $this->add_item( 'cohort_id', 'enum', 'Cohort' );
api/ui/widget/contact_form_entry_view.class.php:84:    $this->add_item( 'note', 'text', 'Note' );
api/ui/widget/contact_form_entry_view.class.php:119:    $record = $this->get_record();
api/ui/widget/contact_form_entry_view.class.php:120:    $this->set_item( 'first_name', $record->first_name, false );
api/ui/widget/contact_form_entry_view.class.php:121:    $this->set_item( 'last_name', $record->last_name, false );
api/ui/widget/contact_form_entry_view.class.php:122:    $this->set_item( 'apartment_number', $record->apartment_number, false );
api/ui/widget/contact_form_entry_view.class.php:123:    $this->set_item( 'street_number', $record->street_number, false );
api/ui/widget/contact_form_entry_view.class.php:124:    $this->set_item( 'street_name', $record->street_name, false );
api/ui/widget/contact_form_entry_view.class.php:125:    $this->set_item( 'box', $record->box, false );
api/ui/widget/contact_form_entry_view.class.php:126:    $this->set_item( 'rural_route', $record->rural_route, false );
api/ui/widget/contact_form_entry_view.class.php:127:    $this->set_item( 'address_other', $record->address_other, false );
api/ui/widget/contact_form_entry_view.class.php:128:    $this->set_item( 'city', $record->city, false );
api/ui/widget/contact_form_entry_view.class.php:129:    $this->set_item( 'region_id', $record->region_id, false, $region_list );
api/ui/widget/contact_form_entry_view.class.php:130:    $this->set_item( 'postcode', $record->postcode, false );
api/ui/widget/contact_form_entry_view.class.php:131:    $this->set_item( 'address_note', $record->address_note, false );
api/ui/widget/contact_form_entry_view.class.php:132:    $this->set_item( 'home_phone', $record->home_phone, false );
api/ui/widget/contact_form_entry_view.class.php:133:    $this->set_item( 'home_phone_note', $record->home_phone_note, false );
api/ui/widget/contact_form_entry_view.class.php:134:    $this->set_item( 'mobile_phone', $record->mobile_phone, false );
api/ui/widget/contact_form_entry_view.class.php:135:    $this->set_item( 'mobile_phone_note', $record->mobile_phone_note, false );
api/ui/widget/contact_form_entry_view.class.php:136:    $this->set_item( 'phone_preference', $record->phone_preference, true, $phone_preference_list );
api/ui/widget/contact_form_entry_view.class.php:137:    $this->set_item( 'email', $record->email, false );
api/ui/widget/contact_form_entry_view.class.php:138:    $this->set_item( 'gender', $record->gender, false, $gender_list );
api/ui/widget/contact_form_entry_view.class.php:139:    $this->set_item( 'age_bracket', $record->age_bracket, false, $age_bracket_list );
api/ui/widget/contact_form_entry_view.class.php:140:    $this->set_item( 'monday', $record->monday, true );
api/ui/widget/contact_form_entry_view.class.php:141:    $this->set_item( 'tuesday', $record->tuesday, true );
api/ui/widget/contact_form_entry_view.class.php:142:    $this->set_item( 'wednesday', $record->wednesday, true );
api/ui/widget/contact_form_entry_view.class.php:143:    $this->set_item( 'thursday', $record->thursday, true );
api/ui/widget/contact_form_entry_view.class.php:144:    $this->set_item( 'friday', $record->friday, true );
api/ui/widget/contact_form_entry_view.class.php:145:    $this->set_item( 'saturday', $record->saturday, true );
api/ui/widget/contact_form_entry_view.class.php:146:    $this->set_item( 'time_9_10', $record->time_9_10, true );
api/ui/widget/contact_form_entry_view.class.php:147:    $this->set_item( 'time_10_11', $record->time_10_11, true );
api/ui/widget/contact_form_entry_view.class.php:148:    $this->set_item( 'time_11_12', $record->time_11_12, true );
api/ui/widget/contact_form_entry_view.class.php:149:    $this->set_item( 'time_12_13', $record->time_12_13, true );
api/ui/widget/contact_form_entry_view.class.php:150:    $this->set_item( 'time_13_14', $record->time_13_14, true );
api/ui/widget/contact_form_entry_view.class.php:151:    $this->set_item( 'time_14_15', $record->time_14_15, true );
api/ui/widget/contact_form_entry_view.class.php:152:    $this->set_item( 'time_15_16', $record->time_15_16, true );
api/ui/widget/contact_form_entry_view.class.php:153:    $this->set_item( 'time_16_17', $record->time_16_17, true );
api/ui/widget/contact_form_entry_view.class.php:154:    $this->set_item( 'time_17_18', $record->time_17_18, true );
api/ui/widget/contact_form_entry_view.class.php:155:    $this->set_item( 'time_18_19', $record->time_18_19, true );
api/ui/widget/contact_form_entry_view.class.php:156:    $this->set_item( 'time_19_20', $record->time_19_20, true );
api/ui/widget/contact_form_entry_view.class.php:157:    $this->set_item( 'time_20_21', $record->time_20_21, true );
api/ui/widget/contact_form_entry_view.class.php:158:    $this->set_item( 'language', $record->language, true, $language_list );
api/ui/widget/contact_form_entry_view.class.php:159:    $this->set_item( 'signed', $this->get_record()->signed, true );
api/ui/widget/contact_form_entry_view.class.php:160:    $this->set_item( 'date', $record->date, false );
api/ui/widget/contact_form_entry_view.class.php:161:    $this->set_item( 'cohort_id', $record->cohort_id, false, $cohort_list );
api/ui/widget/contact_form_entry_view.class.php:162:    $this->set_item( 'note', $record->note, false );
api/ui/widget/base_form_entry_list.class.php:29:    $this->form_type = $form_type;
api/ui/widget/base_form_entry_list.class.php:43:    $this->add_column( $this->form_type.'_form_id', 'number', 'ID', true );
api/ui/widget/base_form_entry_list.class.php:44:    $this->add_column( 'date', $this->form_type.'_form.date', 'Date Added', false );
api/ui/widget/base_form_entry_list.class.php:47:    $this->set_addable( true );
api/ui/widget/base_form_entry_list.class.php:60:    $form_id_name = $this->form_type.'_form_id';
api/ui/widget/base_form_entry_list.class.php:61:    $get_form_method = sprintf( 'get_%s_form', $this->form_type );
api/ui/widget/base_form_entry_list.class.php:63:    foreach( $this->get_record_list() as $record )
api/ui/widget/base_form_entry_list.class.php:65:      $this->add_row( $record->id,
api/ui/widget/base_form_entry_list.class.php:66:        array( $this->form_type.'_form_id' => $record->$form_id_name,
api/ui/widget/base_form_entry_list.class.php:81:    $form_name = $this->form_type.'_form';
api/ui/widget/base_form_entry_list.class.php:104:    $form_name = $this->form_type.'_form';
api/ui/widget/base_form_view.class.php:47:    $id = $this->get_argument( 'id' );
api/ui/widget/base_form_view.class.php:49:    $this->set_heading( sprintf( 'Viewing %s #%d', $this->get_subject(), $id ) );
api/ui/widget/base_form_view.class.php:52:    $form_entry_list_method = sprintf( 'get_%s_entry_list', $this->get_subject() );
api/ui/widget/base_form_view.class.php:53:    $form_entry_list = $this->get_record()->$form_entry_list_method();
api/ui/widget/base_form_view.class.php:57:    $this->set_form_entries(
api/ui/widget/base_form_view.class.php:75:    $this->add_action( 'download', 'Download', NULL,
api/ui/widget/base_form_view.class.php:77:    $this->add_action( 'submit', 'Submit', NULL,
api/ui/widget/base_form_view.class.php:79:    $this->add_action( 'invalidate', 'Invalidate', NULL,
api/ui/widget/base_form_view.class.php:84:    if( !is_null( $this->form_entry_1 ) )
api/ui/widget/base_form_view.class.php:86:      $username = $this->form_entry_1->get_user()->name;
api/ui/widget/base_form_view.class.php:87:      $this->add_action( 'defer_'.$username, 'Defer '.$username, NULL,
api/ui/widget/base_form_view.class.php:90:      $args = array( 'id' => $this->form_entry_1->id );
api/ui/widget/base_form_view.class.php:91:      $operation = lib::create( sprintf( 'ui\pull\%s_entry_validate', $this->get_subject() ), $args );
api/ui/widget/base_form_view.class.php:96:    if( !is_null( $this->form_entry_2 ) )
api/ui/widget/base_form_view.class.php:98:      $username = $this->form_entry_2->get_user()->name;
api/ui/widget/base_form_view.class.php:99:      $this->add_action( 'defer_'.$username, 'Defer '.$username, NULL,
api/ui/widget/base_form_view.class.php:102:      $args = array( 'id' => $this->form_entry_2->id );
api/ui/widget/base_form_view.class.php:103:      $operation = lib::create( sprintf( 'ui\pull\%s_entry_validate', $this->get_subject() ), $args );
api/ui/widget/base_form_view.class.php:108:    foreach( $this->items as $item_id => $item )
api/ui/widget/base_form_view.class.php:114:      if( !is_null( $this->form_entry_1 ) )
api/ui/widget/base_form_view.class.php:117:                                  $this->form_entry_1->get_user()->name,
api/ui/widget/base_form_view.class.php:118:                                  $this->form_entry_1->deferred ? ' (deferred)' : '' );
api/ui/widget/base_form_view.class.php:123:        if( !is_null( $this->form_entry_1->$item_id ) )
api/ui/widget/base_form_view.class.php:127:            $db_region = lib::create( 'database\region', $this->form_entry_1->$item_id );
api/ui/widget/base_form_view.class.php:132:            $db_cohort = lib::create( 'database\cohort', $this->form_entry_1->$item_id );
api/ui/widget/base_form_view.class.php:135:          else $entry['value'] = $this->form_entry_1->$item_id;
api/ui/widget/base_form_view.class.php:138:      $this->items[$item_id]['entry_1'] = $entry;
api/ui/widget/base_form_view.class.php:144:      if( !is_null( $this->form_entry_2 ) )
api/ui/widget/base_form_view.class.php:147:                                  $this->form_entry_2->get_user()->name,
api/ui/widget/base_form_view.class.php:148:                                  $this->form_entry_2->deferred ? ' (deferred)' : '' );
api/ui/widget/base_form_view.class.php:153:        if( !is_null( $this->form_entry_2->$item_id ) )
api/ui/widget/base_form_view.class.php:157:            $db_region = lib::create( 'database\region', $this->form_entry_2->$item_id );
api/ui/widget/base_form_view.class.php:162:            $db_cohort = lib::create( 'database\cohort', $this->form_entry_1->$item_id );
api/ui/widget/base_form_view.class.php:165:          else $entry['value'] = $this->form_entry_2->$item_id;
api/ui/widget/base_form_view.class.php:168:      $this->items[$item_id]['entry_2'] = $entry;
api/ui/widget/base_form_view.class.php:171:      $this->items[$item_id]['conflict'] =
api/ui/widget/base_form_view.class.php:172:        ( is_string( $this->items[$item_id]['entry_1']['value'] ) &&
api/ui/widget/base_form_view.class.php:173:          0 != strcasecmp( $this->items[$item_id]['entry_1']['value'],
api/ui/widget/base_form_view.class.php:174:                           $this->items[$item_id]['entry_2']['value'] ) ) ||
api/ui/widget/base_form_view.class.php:175:        ( !is_string( $this->items[$item_id]['entry_1']['value'] ) &&
api/ui/widget/base_form_view.class.php:176:          $this->items[$item_id]['entry_1']['value'] !=
api/ui/widget/base_form_view.class.php:177:          $this->items[$item_id]['entry_2']['value'] );
api/ui/widget/base_form_view.class.php:180:    $this->set_variable( 'entry_1', is_null( $this->form_entry_1 )
api/ui/widget/base_form_view.class.php:183:               'id' => $this->form_entry_1->id,
api/ui/widget/base_form_view.class.php:184:               'deferred' => $this->form_entry_1->deferred,
api/ui/widget/base_form_view.class.php:185:               'user' => $this->form_entry_1->get_user()->name ) );
api/ui/widget/base_form_view.class.php:186:    $this->set_variable( 'entry_2', is_null( $this->form_entry_2 )
api/ui/widget/base_form_view.class.php:189:               'id' => $this->form_entry_2->id,
api/ui/widget/base_form_view.class.php:190:               'deferred' => $this->form_entry_2->deferred,
api/ui/widget/base_form_view.class.php:191:               'user' => $this->form_entry_2->get_user()->name ) );
api/ui/widget/base_form_view.class.php:193:    $this->set_variable( 'item', $this->items );
api/ui/widget/base_form_view.class.php:194:    $this->set_variable( 'allow_adjudication',
api/ui/widget/base_form_view.class.php:195:      !is_null( $this->form_entry_1 ) && !$this->form_entry_1->deferred &&
api/ui/widget/base_form_view.class.php:196:      !is_null( $this->form_entry_2 ) && !$this->form_entry_2->deferred );
api/ui/widget/base_form_view.class.php:198:    $this->set_variable( 'actions', $this->actions );
api/ui/widget/base_form_view.class.php:211:    $this->items[$item_id] = array(
api/ui/widget/base_form_view.class.php:214:    if( !is_null( $note ) ) $this->items[$item_id]['note'] = $note;
api/ui/widget/base_form_view.class.php:228:    $this->form_entry_1 = $form_entry_1;
api/ui/widget/base_form_view.class.php:229:    $this->form_entry_2 = $form_entry_2;
api/ui/widget/base_form_view.class.php:245:    $this->actions[$action_id] =
api/ui/widget/base_form_view.class.php:261:    if( array_key_exists( $action_id, $this->actions ) )
api/ui/widget/base_form_view.class.php:262:      unset( $this->actions[$action_id] );
api/ui/widget/consent_form_view.class.php:42:    $this->add_item( 'uid', 'CLSA ID' );
api/ui/widget/consent_form_view.class.php:43:    $this->add_item( 'option_1', 'Option #1' );
api/ui/widget/consent_form_view.class.php:44:    $this->add_item( 'option_2', 'Option #2' );
api/ui/widget/consent_form_view.class.php:45:    $this->add_item( 'signed', 'Signed' );
api/ui/widget/consent_form_view.class.php:46:    $this->add_item( 'date', 'Date Signed' );
api/ui/widget/quota_report.class.php:28:    $this->use_cache = true;
api/ui/widget/quota_report.class.php:42:    $this->add_restriction( 'cohort' );
api/ui/widget/quota_report.class.php:43:    $this->add_restriction( 'source' );
api/ui/widget/quota_report.class.php:44:    $this->add_restriction( 'dates' );
api/ui/widget/quota_report.class.php:46:    $this->set_variable( 'description',
api/ui/widget/proxy_form_list.class.php:39:    $restrict_cohort_id = $this->get_argument( 'restrict_cohort_id', 0 );
api/ui/widget/proxy_form_list.class.php:67:    $restrict_cohort_id = $this->get_argument( 'restrict_cohort_id', 0 );
api/ui/widget/consent_view.class.php:28:    $db_consent_form = $this->get_record()->get_consent_form();
api/ui/widget/consent_view.class.php:30:      $this->set_variable( 'consent_form_id', $db_consent_form->id );
api/ui/widget/consent_view.class.php:31:    $this->add_action( 'consent_form', 'Consent Form', NULL,
api/ui/widget/contact_form_list.class.php:39:    $restrict_cohort_id = $this->get_argument( 'restrict_cohort_id', 0 );
api/ui/widget/contact_form_list.class.php:66:    $restrict_cohort_id = $this->get_argument( 'restrict_cohort_id', 0 );
api/ui/widget/base_report.class.php:44:    $this->restrictions['cohort'] = false;
api/ui/widget/base_report.class.php:45:    $this->restrictions['source'] = false;
api/ui/widget/base_report.class.php:58:    if( $this->restrictions[ 'cohort' ] )
api/ui/widget/base_report.class.php:68:      $this->set_parameter( 'restrict_cohort_id', key( $cohort_list ), true, $cohort_list );
api/ui/widget/base_report.class.php:71:    if( $this->restrictions[ 'source' ] )
api/ui/widget/base_report.class.php:78:      $this->set_parameter( 'restrict_source_id', key( $source_list ), true, $source_list );
api/ui/widget/base_report.class.php:95:      $this->restrictions[ 'cohort' ] = true;
api/ui/widget/base_report.class.php:96:      $this->add_parameter( 'restrict_cohort_id', 'enum', 'Cohort' );
api/ui/widget/base_report.class.php:100:      $this->restrictions[ 'source' ] = true;
api/ui/widget/base_report.class.php:101:      $this->add_parameter( 'restrict_source_id', 'enum', 'Source' );
api/ui/widget/consent_form_list.class.php:39:    $restrict_cohort_id = $this->get_argument( 'restrict_cohort_id', 0 );
api/ui/widget/consent_form_list.class.php:67:    $restrict_cohort_id = $this->get_argument( 'restrict_cohort_id', 0 );
api/ui/widget/self_menu.class.php:28:    $this->exclude_list( array(
api/ui/widget/self_menu.class.php:44:    $utilities = $this->get_variable( 'utilities' );
api/ui/widget/self_menu.class.php:62:    $this->set_variable( 'utilities', $utilities );
api/ui/widget/base_form_list.class.php:29:    $this->form_type = $form_type;
api/ui/widget/base_form_list.class.php:43:    $this->add_column( 'id', 'number', 'ID', true );
api/ui/widget/base_form_list.class.php:44:    $this->add_column( 'date', 'date', 'Date Added', true );
api/ui/widget/base_form_list.class.php:45:    $this->add_column( 'typist_1', 'string', 'Typist 1', false );
api/ui/widget/base_form_list.class.php:46:    $this->add_column( 'typist_1_submitted', 'boolean', 'Submitted', false );
api/ui/widget/base_form_list.class.php:47:    $this->add_column( 'typist_2', 'string', 'Typist 2', false );
api/ui/widget/base_form_list.class.php:48:    $this->add_column( 'typist_2_submitted', 'boolean', 'Submitted', false );
api/ui/widget/base_form_list.class.php:49:    $this->add_column( 'conflict', 'boolean', 'Conflict', false );
api/ui/widget/base_form_list.class.php:66:    $restrict_cohort_id = $this->get_argument( 'restrict_cohort_id', 0 );
api/ui/widget/base_form_list.class.php:67:    $this->set_variable( 'restrict_cohort_id', $restrict_cohort_id );
api/ui/widget/base_form_list.class.php:68:    $this->set_variable( 'cohort_list', $cohort_list );
api/ui/widget/base_form_list.class.php:70:    $form_entry_list_method = sprintf( 'get_%s_entry_list', $this->get_subject() );
api/ui/widget/base_form_list.class.php:75:    foreach( $this->get_record_list() as $record )
api/ui/widget/base_form_list.class.php:100:      $this->add_row( $record->id,
api/ui/widget/base_form_list.class.php:121:    $form_entry_list_class_name = lib::get_class_name( 'database\\'.$this->get_subject() );
api/ui/widget/base_form_list.class.php:139:    $form_entry_list_class_name = lib::get_class_name( 'database\\'.$this->get_subject() );
api/ui/widget/base_form_entry_view.class.php:29:    $this->form_type = $form_type;
api/ui/widget/base_form_entry_view.class.php:43:    $form_entry_class_name = lib::get_class_name( sprintf( 'database\%s', $this->get_subject() ) );
api/ui/widget/base_form_entry_view.class.php:46:      $uid = $this->get_record()->uid;
api/ui/widget/base_form_entry_view.class.php:52:          $this->set_note( 'uid', sprintf(
api/ui/widget/base_form_entry_view.class.php:60:    $args = array( 'id' => $this->get_argument( 'id' ) );
api/ui/widget/base_form_entry_view.class.php:61:    $operation = lib::create( sprintf( 'ui\pull\%s_validate', $this->get_subject() ), $args );
api/ui/widget/base_form_entry_view.class.php:64:    foreach( $errors as $type => $error ) $this->set_note( $type, $error, true );
api/ui/widget/base_form_entry_view.class.php:67:    $form_name = $this->form_type.'_form';
api/ui/widget/base_form_entry_view.class.php:70:    $this->set_variable( 'form_name', $form_name );
api/ui/widget/base_form_entry_view.class.php:71:    $this->set_variable( 'form_id', $this->get_record()->$form_id_name );
api/ui/widget/withdraw_report.class.php:41:    $this->add_restriction( 'cohort' );
api/ui/widget/withdraw_report.class.php:42:    $this->add_restriction( 'source' );
api/ui/widget/withdraw_report.class.php:44:    $this->set_variable( 'description',
api/ui/widget/contact_report.class.php:41:    $this->add_parameter( 'uid_list', 'text', 'UID List' );
api/ui/widget/contact_report.class.php:43:    $this->set_variable( 'description',
api/ui/widget/contact_report.class.php:59:    $this->set_parameter( 'uid_list', '', true );
api/ui/widget/participant_view.class.php:28:    $db_contact_form = $this->get_record()->get_contact_form();
api/ui/widget/participant_view.class.php:30:      $this->set_variable( 'contact_form_id', $db_contact_form->id );
api/ui/widget/participant_view.class.php:31:    $this->add_action( 'contact_form', 'Contact Form', NULL,
api/ui/widget/consent_form_entry_view.class.php:42:    $this->add_item( 'uid', 'string', 'CLSA ID' );
api/ui/widget/consent_form_entry_view.class.php:43:    $this->add_item( 'option_1', 'boolean', 'Option #1' );
api/ui/widget/consent_form_entry_view.class.php:44:    $this->add_item( 'option_2', 'boolean', 'Option #2' );
api/ui/widget/consent_form_entry_view.class.php:45:    $this->add_item( 'signed', 'boolean', 'Signed' );
api/ui/widget/consent_form_entry_view.class.php:46:    $this->add_item( 'date', 'date', 'Date Signed' );
api/ui/widget/consent_form_entry_view.class.php:60:    $this->set_item( 'uid', $this->get_record()->uid, false );
api/ui/widget/consent_form_entry_view.class.php:61:    $this->set_item( 'option_1', $this->get_record()->option_1, true );
api/ui/widget/consent_form_entry_view.class.php:62:    $this->set_item( 'option_2', $this->get_record()->option_2, true );
api/ui/widget/consent_form_entry_view.class.php:63:    $this->set_item( 'signed', $this->get_record()->signed, true );
api/ui/widget/consent_form_entry_view.class.php:64:    $this->set_item( 'date', $this->get_record()->date, false );
api/ui/widget/proxy_form_view.class.php:42:    $this->add_item( 'uid', 'CLSA ID' ); 
api/ui/widget/proxy_form_view.class.php:43:    $this->add_item( 'proxy', 'Use Proxy' ); 
api/ui/widget/proxy_form_view.class.php:44:    $this->add_item( 'already_identified', 'Already Identified' ); 
api/ui/widget/proxy_form_view.class.php:45:    $this->add_item( 'proxy_first_name', 'Proxy\'s First Name' ); 
api/ui/widget/proxy_form_view.class.php:46:    $this->add_item( 'proxy_last_name', 'Proxy\'s Last Name' ); 
api/ui/widget/proxy_form_view.class.php:47:    $this->add_item( 'proxy_apartment_number', 'Proxy\'s Apartment #' ); 
api/ui/widget/proxy_form_view.class.php:48:    $this->add_item( 'proxy_street_number', 'Proxy\'s Street #' ); 
api/ui/widget/proxy_form_view.class.php:49:    $this->add_item( 'proxy_street_name', 'Proxy\'s Street Name' ); 
api/ui/widget/proxy_form_view.class.php:50:    $this->add_item( 'proxy_box', 'Proxy\'s Post Office Box #' ); 
api/ui/widget/proxy_form_view.class.php:51:    $this->add_item( 'proxy_rural_route', 'Proxy\'s Rural Route #' ); 
api/ui/widget/proxy_form_view.class.php:52:    $this->add_item( 'proxy_address_other', 'Proxy\'s Other Address' ); 
api/ui/widget/proxy_form_view.class.php:53:    $this->add_item( 'proxy_city', 'Proxy\'s City' ); 
api/ui/widget/proxy_form_view.class.php:54:    $this->add_item( 'proxy_region_id', 'Proxy\'s Province' ); 
api/ui/widget/proxy_form_view.class.php:55:    $this->add_item( 'proxy_postcode', 'Proxy\'s Postal Code' ); 
api/ui/widget/proxy_form_view.class.php:56:    $this->add_item( 'proxy_address_note', 'text', 'Proxy Address Note' ); 
api/ui/widget/proxy_form_view.class.php:57:    $this->add_item( 'proxy_phone', 'Proxy\'s Phone Number' ); 
api/ui/widget/proxy_form_view.class.php:58:    $this->add_item( 'proxy_phone_note', 'text', 'Proxy Phone Note' ); 
api/ui/widget/proxy_form_view.class.php:59:    $this->add_item( 'proxy_note', 'text', 'Proxy Note' ); 
api/ui/widget/proxy_form_view.class.php:60:    $this->add_item( 'informant', 'Use Informant' ); 
api/ui/widget/proxy_form_view.class.php:61:    $this->add_item( 'same_as_proxy', 'Same As Proxy' ); 
api/ui/widget/proxy_form_view.class.php:62:    $this->add_item( 'informant_first_name', 'Informant\'s First Name' ); 
api/ui/widget/proxy_form_view.class.php:63:    $this->add_item( 'informant_last_name', 'Informant\'s Last Name' ); 
api/ui/widget/proxy_form_view.class.php:64:    $this->add_item( 'informant_apartment_number', 'Informant\'s Apartment #' ); 
api/ui/widget/proxy_form_view.class.php:65:    $this->add_item( 'informant_street_number', 'Informant\'s Street #' ); 
api/ui/widget/proxy_form_view.class.php:66:    $this->add_item( 'informant_street_name', 'Informant\'s Street Name' ); 
api/ui/widget/proxy_form_view.class.php:67:    $this->add_item( 'informant_box', 'Informant\'s Post Office Box #' ); 
api/ui/widget/proxy_form_view.class.php:68:    $this->add_item( 'informant_rural_route', 'Informant\'s Rural Route #' ); 
api/ui/widget/proxy_form_view.class.php:69:    $this->add_item( 'informant_address_other', 'Informant\'s Other Address' ); 
api/ui/widget/proxy_form_view.class.php:70:    $this->add_item( 'informant_city', 'Informant\'s City' ); 
api/ui/widget/proxy_form_view.class.php:71:    $this->add_item( 'informant_region_id', 'Informant\'s Province' ); 
api/ui/widget/proxy_form_view.class.php:72:    $this->add_item( 'informant_postcode', 'Informant\'s Postal Code' ); 
api/ui/widget/proxy_form_view.class.php:73:    $this->add_item( 'informant_address_note', 'text', 'Informant Address Note' ); 
api/ui/widget/proxy_form_view.class.php:74:    $this->add_item( 'informant_phone', 'Informant\'s Phone Number' ); 
api/ui/widget/proxy_form_view.class.php:75:    $this->add_item( 'informant_phone_note', 'text', 'Informant Phone Note' ); 
api/ui/widget/proxy_form_view.class.php:76:    $this->add_item( 'informant_note', 'text', 'Informant Note' ); 
api/ui/widget/proxy_form_view.class.php:77:    $this->add_item( 'informant_continue', 'Informant Continue' ); 
api/ui/widget/proxy_form_view.class.php:78:    $this->add_item( 'health_card', 'Health Card Continue' ); 
api/ui/widget/proxy_form_view.class.php:79:    $this->add_item( 'signed', 'Signed' );
api/ui/widget/proxy_form_view.class.php:80:    $this->add_item( 'date', 'Date Signed' ); 
api/ui/widget/user_add.class.php:38:    $this->set_item( 'role_id', current( $roles ), true, $roles );
api/ui/widget/alternate_view.class.php:28:    $db_proxy_form = $this->get_record()->get_proxy_form();
api/ui/widget/alternate_view.class.php:30:      $this->set_variable( 'proxy_form_id', $db_proxy_form->id );
api/ui/widget/alternate_view.class.php:31:    $this->add_action( 'proxy_form', 'Proxy Form', NULL,
api/ui/pull/service_participant_release.class.php:49:    $uid_list_string = preg_replace( '/[^a-zA-Z0-9]/', ' ', $this->get_argument( 'uid_list' ) );
api/ui/pull/service_participant_release.class.php:51:    $start_date = $this->get_argument( 'start_date', '' );
api/ui/pull/service_participant_release.class.php:52:    $end_date = $this->get_argument( 'end_date', '' );
api/ui/pull/service_participant_release.class.php:93:    $this->data = array();
api/ui/pull/service_participant_release.class.php:95:      $this->data['New participants ('.$site.')'] = $count;
api/ui/pull/service_participant_release.class.php:96:    $this->data['Addresses'] = $address_count;
api/ui/pull/service_participant_release.class.php:97:    $this->data['Phone numbers'] = $phone_count;
api/ui/pull/service_participant_release.class.php:98:    $this->data['Consent entries'] = $consent_count;
api/ui/pull/service_participant_release.class.php:99:    $this->data['Availability entries'] = $availability_count;
api/ui/pull/service_participant_release.class.php:100:    $this->data['Note entries'] = $note_count;
api/ui/pull/contact_form_entry_validate.class.php:43:    $record = $this->get_record();
api/ui/pull/contact_form_entry_validate.class.php:190:    $this->data = $errors;
api/ui/pull/consent_form_entry_validate.class.php:43:    if( is_null( $this->get_record()->uid ) )
api/ui/pull/consent_form_entry_validate.class.php:48:        $participant_class_name::get_unique_record( 'uid', $this->get_record()->uid );
api/ui/pull/consent_form_entry_validate.class.php:53:    $this->data = $errors;
api/ui/pull/mailout_report.class.php:42:    $mailed_to = $this->get_argument( 'mailed_to' );
api/ui/pull/mailout_report.class.php:43:    $db_cohort = lib::create( 'database\cohort', $this->get_argument( 'restrict_cohort_id' ) );
api/ui/pull/mailout_report.class.php:44:    $source_id = $this->get_argument( 'restrict_source_id' );
api/ui/pull/mailout_report.class.php:46:    $mark_mailout = $this->get_argument( 'mark_mailout' );
api/ui/pull/mailout_report.class.php:51:      $this->add_title( 
api/ui/pull/mailout_report.class.php:59:      $this->add_title( 
api/ui/pull/mailout_report.class.php:143:    $this->add_table( NULL, $header, $contents, NULL );
api/ui/pull/quota_report.class.php:43:    $db_cohort = lib::create( 'database\cohort', $this->get_argument( 'restrict_cohort_id' ) );
api/ui/pull/quota_report.class.php:46:                         $this->get_full_name(),
api/ui/pull/quota_report.class.php:48:    if( file_exists( $filename ) ) $this->report = lib::create( 'business\report', $filename );
api/ui/pull/quota_report.class.php:58:    $this->report->set_orientation( 'landscape' );
api/ui/pull/quota_report.class.php:66:    $db_cohort = lib::create( 'database\cohort', $this->get_argument( 'restrict_cohort_id' ) );
api/ui/pull/quota_report.class.php:68:    $source_id = $this->get_argument( 'restrict_source_id' );
api/ui/pull/quota_report.class.php:70:    $restrict_start_date = $this->get_argument( 'restrict_start_date' );
api/ui/pull/quota_report.class.php:71:    $restrict_end_date = $this->get_argument( 'restrict_end_date' );
api/ui/pull/quota_report.class.php:151:      $this->population_data
api/ui/pull/quota_report.class.php:171:      $this->population_data
api/ui/pull/quota_report.class.php:183:      $this->population_data
api/ui/pull/quota_report.class.php:197:        $this->population_data
api/ui/pull/quota_report.class.php:210:      $this->population_data
api/ui/pull/quota_report.class.php:222:      $this->population_data
api/ui/pull/quota_report.class.php:236:        $this->population_data
api/ui/pull/quota_report.class.php:249:      $this->population_data
api/ui/pull/quota_report.class.php:255:      $this->population_data
api/ui/pull/quota_report.class.php:274:    foreach( $this->population_data as $site_region_data )
api/ui/pull/quota_report.class.php:280:          $this->report->set_cell( $column.$row, $gender_data['male'], false );
api/ui/pull/quota_report.class.php:281:          $this->report->set_cell( $column.( $row + 1 ), $gender_data['female'], false );
api/ui/pull/quota_report.class.php:289:    $db_cohort = lib::create( 'database\cohort', $this->get_argument( 'restrict_cohort_id' ) );
api/ui/pull/quota_report.class.php:290:    $source_id = $this->get_argument( 'restrict_source_id' );
api/ui/pull/quota_report.class.php:292:    $this->report->set_size( 16 );
api/ui/pull/quota_report.class.php:293:    $this->report->set_bold( true );
api/ui/pull/quota_report.class.php:294:    $this->report->set_horizontal_alignment( 'center' );
api/ui/pull/quota_report.class.php:295:    $this->report->merge_cells( 'A1:M1' );
api/ui/pull/quota_report.class.php:296:    $this->report->set_cell(
api/ui/pull/quota_report.class.php:304:    $this->report->merge_cells( 'A2:M2' );
api/ui/pull/quota_report.class.php:305:    $this->report->set_cell( 'A2',
api/ui/pull/quota_report.class.php:311:    $restrict_start_date = $this->get_argument( 'restrict_start_date' );
api/ui/pull/quota_report.class.php:312:    $restrict_end_date = $this->get_argument( 'restrict_end_date' );
api/ui/pull/quota_report.class.php:315:      $this->report->set_cell( 'A3',
api/ui/pull/quota_report.class.php:321:      $this->report->set_cell( 'A3',
api/ui/pull/quota_report.class.php:327:      $this->report->set_cell( 'A3',
api/ui/pull/quota_report.class.php:333:    $this->data = $this->report->get_file( $this->get_argument( 'format' ) );
api/ui/pull/base_form_download.class.php:28:    $this->form_type = $form_type;
api/ui/pull/base_form_download.class.php:39:    $this->data = $this->get_record()->scan;
api/ui/pull/base_form_download.class.php:50:    return $this->get_record()->id;
api/ui/pull/proxy_form_entry_validate.class.php:42:    $record = $this->get_record();
api/ui/pull/proxy_form_entry_validate.class.php:165:    $this->data = $errors;
api/ui/pull/withdraw_report.class.php:44:    $db_cohort = lib::create( 'database\cohort', $this->get_argument( 'restrict_cohort_id' ) );
api/ui/pull/withdraw_report.class.php:45:    $source_id = $this->get_argument( 'restrict_source_id' );
api/ui/pull/withdraw_report.class.php:85:    $this->add_table( NULL, $header, $content );
api/ui/pull/contact_report.class.php:41:    $uid_list_string = preg_replace( '/[^a-zA-Z0-9]/', ' ', $this->get_argument( 'uid_list' ) );
api/ui/pull/contact_report.class.php:97:    $this->add_table( NULL, $header, $contents, NULL );
api/ui/push/service_participant_release.class.php:41:    $uid_list_string = preg_replace( '/[^a-zA-Z0-9]/', ' ', $this->get_argument( 'uid_list' ) );
api/ui/push/service_participant_release.class.php:43:    $start_date = $this->get_argument( 'start_date', '' );
api/ui/push/service_participant_release.class.php:44:    $end_date = $this->get_argument( 'end_date', '' );
api/ui/push/base_form_entry_new.class.php:27:    $this->form_type = $form_type;
api/ui/push/base_form_entry_new.class.php:33:    $form_name = $this->form_type.'_form';
api/ui/push/base_form_entry_new.class.php:37:    $form_entry_count_method_name = sprintf( 'get_%s_count', $this->get_subject() );
api/ui/push/base_form_entry_new.class.php:54:    if( is_null( $this->form_mod ) ) $this->form_mod = lib::create( 'database\modifier' );
api/ui/push/base_form_entry_new.class.php:55:    $this->form_mod->where( 'invalid', '=', false );
api/ui/push/base_form_entry_new.class.php:56:    $this->form_mod->where( 'complete', '=', false );
api/ui/push/base_form_entry_new.class.php:57:    $this->form_mod->order( 'id' );
api/ui/push/base_form_entry_new.class.php:58:    foreach( $form_class_name::select( $this->form_mod ) as $db_form )
api/ui/push/base_form_entry_new.class.php:66:        $this->arguments['columns'][$form_id_name] = $db_form->id;
api/ui/push/base_form_entry_new.class.php:67:        $this->arguments['columns']['user_id'] = $db_user->id;
api/ui/push/base_form_entry_new.class.php:76:               str_replace( '_', ' ', $this->get_subject() ) ),
api/ui/push/import_process.class.php:55:    foreach( $this->get_record()->get_import_entry_list( $import_entry_mod ) as $db_entry )
api/ui/push/import_process.class.php:58:    $this->get_record()->processed = true;
api/ui/push/import_process.class.php:59:    $this->get_record()->save();
api/ui/push/base_form_adjudicate.class.php:29:    $this->form_type = $form_type;
api/ui/push/base_form_adjudicate.class.php:42:    $columns = $this->get_argument( 'columns' );
api/ui/push/base_form_adjudicate.class.php:45:    $entry_list_method_name = sprintf( 'get_%s_entry_list', $this->get_subject() );
api/ui/push/base_form_adjudicate.class.php:49:      $this->get_record()->$entry_list_method_name( $form_entry_mod );
api/ui/push/base_form_adjudicate.class.php:53:                 str_replace( '_', ' ', $this->get_subject() ),
api/ui/push/base_form_adjudicate.class.php:54:                 $this->get_record()->id ),
api/ui/push/base_form_adjudicate.class.php:77:      $this->get_record()->import( $db_form_entries[$exclusive_username] );
api/ui/push/base_form_adjudicate.class.php:81:      $form_entry_name = sprintf( 'database\%s_entry', $this->get_subject() );
api/ui/push/base_form_adjudicate.class.php:83:      $form_id_column_name = sprintf( '%s_id', $this->get_subject() );
api/ui/push/base_form_adjudicate.class.php:89:        array( $this->get_record()->id, $user_id ) );
api/ui/push/base_form_adjudicate.class.php:94:        $db_form_entry->$form_id_column_name = $this->get_record()->id;
api/ui/push/base_form_adjudicate.class.php:112:      $this->get_record()->import( $db_form_entry );
api/ui/push/import_delete.class.php:39:    foreach( $this->get_record()->get_import_entry_list() as $db_import_entry )
api/ui/push/base_form_entry_edit.class.php:27:    $this->form_type = $form_type;
api/ui/push/base_form_entry_edit.class.php:41:    $columns = $this->get_argument( 'columns' );
api/ui/push/base_form_entry_edit.class.php:46:      $validate_class_name = sprintf( 'ui\pull\%s_form_entry_validate', $this->form_type );
api/ui/push/base_form_entry_edit.class.php:47:      $get_form_method_name = sprintf( 'get_%s_form', $this->form_type );
api/ui/push/base_form_entry_edit.class.php:48:      $entry_list_method_name = sprintf( 'get_%s_form_entry_list', $this->form_type );
api/ui/push/base_form_entry_edit.class.php:50:      $op_validate = lib::create( $validate_class_name, array( 'id' => $this->get_record()->id ) );
api/ui/push/base_form_entry_edit.class.php:56:                   $this->form_type,
api/ui/push/base_form_entry_edit.class.php:72:    $columns = $this->get_argument( 'columns' );
api/ui/push/base_form_entry_edit.class.php:78:      $get_form_method_name = sprintf( 'get_%s_form', $this->form_type );
api/ui/push/base_form_entry_edit.class.php:79:      $entry_list_method_name = sprintf( 'get_%s_form_entry_list', $this->form_type );
api/ui/push/base_form_entry_edit.class.php:81:      $db_form = $this->get_record()->$get_form_method_name();
api/ui/push/base_form_entry_edit.class.php:84:      $form_entry_mod->where( 'id', '!=', $this->get_record()->id );
api/ui/push/base_form_entry_edit.class.php:93:          if( ( is_string( $this->get_record()->$column ) &&
api/ui/push/base_form_entry_edit.class.php:94:                0 != strcasecmp( $db_form_entry->$column, $this->get_record()->$column ) ) ||
api/ui/push/base_form_entry_edit.class.php:95:              ( !is_string( $this->get_record()->$column ) &&
api/ui/push/base_form_entry_edit.class.php:96:                $db_form_entry->$column != $this->get_record()->$column ) )
api/ui/push/base_form_entry_edit.class.php:105:          if( $match ) $db_form->import( $this->get_record() );
api/ui/push/alternate_new.class.php:30:    $form = $this->get_argument( 'form', NULL );
api/ui/push/proxy_form_entry_new.class.php:28:    $this->form_mod = lib::create( 'database\modifier' );
api/ui/push/proxy_form_entry_new.class.php:29:    $this->form_mod->where( 'from_onyx', '=', false );
api/ui/push/proxy_form_new.class.php:77:    $form = $this->get_argument( 'form', NULL );
api/ui/push/proxy_form_new.class.php:85:      $this->get_record()->scan = $form_decoded;
api/ui/push/proxy_form_new.class.php:86:      $this->get_record()->save();
api/ui/push/proxy_form_new.class.php:90:    $entry = $this->get_argument( 'entry', NULL );    
api/ui/push/proxy_form_new.class.php:94:      $db_proxy_form_entry->proxy_form_id = $this->get_record()->id;
api/ui/push/proxy_form_new.class.php:96:      $db_proxy_form_entry->signed = !is_null( $this->get_record()->scan );
api/ui/push/proxy_form_new.class.php:108:      if( 0 == count( $errors ) ) $this->get_record()->import( $db_proxy_form_entry );
